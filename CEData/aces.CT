<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="31">
  <Forms>
    <UDF1 Class="TCEForm" Encoding="Ascii85">ty9Zx)=ArR+p4S5RH#%=A%TcQ+.XYy7VH_6sEeRPvJnz2s*.;GhPX4.[yX,$2[+i44]2[U#F^=/iLqxK$9Vt=ujX}^,.h%7[lAp5FzO%S!0YveJab,:;pyS=bOQEK-94dfIs@N4%=]x5^RP!uvIu7O4{=8)4oq-2i?*l^jB.2,xAZv:zB1(.A,UD?DBexuPt!^Il^?7AOuWZCi/k6;Qb4[k0oIGgWZf}4to..]b*W%Rqeei,Lm5$NAt#[0.O1!!pT/5A2@MOq=SS(BipN.)OL4pD;4b6U3l5%$g}T_FyD/spr6)UQV}X8L)iL%pR#A3t9]kS{q_YLn.yv[KiWD+aD}s,ri/*M!FUD[Z2yK*7v}9^2toD^zp:wAx*b0O-^.9RKO;0}_sz=7Nt@E.g)H86Uq+W)#@=)W%c8Nu(S^6.kqWcy:?MgX-Cb+pgy[Er-nA!SX%vO/shg@,RILCY0kSy-A%YuocReMg*1lG%^.a,8f^5c:wZ*j*0I86=Hkc;}0nw#e;:}FKhah4T9D#q(#$e6_rvzl]E?@aU+az9Nu;vTcwdhY?xQO,J.wn-F8nk20ek/;]rSZn]d^qsSoyY[FiZc2Ca$X8@.CmP3xGLByxaNufjY%o$sW4T^4l6_+kn*_hI5.k(g?lj^RM?oM52L</UDF1>
  </Forms>
  <CheatEntries/>
  <UserdefinedSymbols/>
  <LuaScript>--8_2
--firstVehicleHighTear = "cn_m42_duster_ico"
--lastVehicleHighTear = "wyvern_s4_ico"
--8_2_2
--firstVehicleHighTear = "ussr_asu_85_ico"
--lastVehicleHighTear = "wyvern_s4_ico"
--9_2
firstVehicleHighTear = "ussr_bmp_1_ico"
lastVehicleHighTear = "wasp_has_mk1_ico"
--6_1
--firstVehicleLowTear = "cn_is_2_1943_ico"
--lastVehicleLowTear = "jp_type_61_ico"

--10_2?
--firstVehicleHighTear = "cn_cm11_ico"
--lastVehicleHighTear = "wasp_has_mk1_ico"
--2_1
firstVehicleLowTear = "cn_lvt_4_zis_2_ico"
lastVehicleLowTear = "jp_type_98_ta_se_ico"
--3_1
--firstVehicleLowTear = "us_m10_ico"
--lastVehicleLowTear = "jp_type_98_ta_se_ico"
--4_1
--firstVehicleLowTear = "us_m10_ico"
--lastVehicleLowTear = "jp_type_95_so_ki_ico"

--firstVehicleHighTear = "ussr_bmp_1_ico"
--lastVehicleHighTear = "scout_ah_mk1_ico"
--firstVehicleHighTear = "ussr_asu_85_ico"
--lastVehicleHighTear = "wyvern_s4_ico"
--firstVehicleHighTear = "ussr_bmp_2_ico"
--lastVehicleHighTear = "a_4b_ico"
--firstVehicleHighTear = "ussr_asu_85_ico"
--lastVehicleHighTear = "vampire_fb5_j28b_ico"
--firstVehicleLowTear = "fr_amx_13_fl_11_ico"
--lastVehicleLowTear = "us_m4a2_1944_germ_ico"

--firstVehicleLowTear = "fr_amx_13_75_ico"
--lastVehicleLowTear = "jp_type_95_so_ki_ico"
--2_1
firstVehicleLowTear = "cn_lvt_4_zis_2_ico"
lastVehicleLowTear = "jp_type_98_ta_se_ico"

--firstVehicleLowTear = "fr_amx_13_75_ico"
--lastVehicleLowTear = "jp_type_5_ho_ri_prototype_ico"
highAddressOffset = 2
lowAddressOffset = 0
wtProcessName = "aces.exe"
lineupPrefix = "#ui/gameuiskin#"

resultField = component_findComponentByName(UDF1, "CEMemo1")
extractButton = component_findComponentByName(UDF1, "CEButton1")
highStartVehicle = component_findComponentByName(UDF1, "CEEdit1")
highFinishVehicle = component_findComponentByName(UDF1, "CEEdit2")
lowStartVehicle = component_findComponentByName(UDF1, "CEEdit3")
lowFinishVehicle = component_findComponentByName(UDF1, "CEEdit4")
addressToExtractStart = component_findComponentByName(UDF1, "CEEdit5")
addressToExtractFinish = component_findComponentByName(UDF1, "CEEdit6")
errorCantFindProcess = "Cant find wt process, please run the game"
errorCantFindLowRegion = "Cant find low region in memory"
errorCantFindHighRegion = "Cant find high region in memory"

form_show(UDF1)
function showResult(msg)
resultField.Lines.Text = msg
extractButton.Enabled = true
end

function UDF1_CEButton1Click(sender)
         --control_setEnabled(extractButton, false)
         thread = createNativeThread(findProcess)
end

function findProcess(sender)
         if(getProcessIDFromProcessName(wtProcessName) == nil) then
           showResult(errorCantFindProcess)
         else
		   openProcess(wtProcessName)
		   findRegions()
         return
         end
end

function findRegions()
local result = "High tear command A"..'\n'..findRegion(lineupPrefix..highStartVehicle.Text, lineupPrefix..highFinishVehicle.Text, "high", highAddressOffset)
result = result .. '\n' .. "Low tear command A" ..'\n'.. findRegion(lineupPrefix..lowStartVehicle.Text, lineupPrefix..lowFinishVehicle.Text, "high", lowAddressOffset)
showResult(result)
end

function findRegion(start, finish, text, offset)
resultField.Lines.Text = "Looking for "..text.." finish of region"
local finishAddresses = AOBScan(textToAOB(finish), "")
resultField.Lines.Text = "Looking for  "..text.." start of region"
local startAddresses = AOBScan(textToAOB(start), "")
print(startAddresses)
print(finishAddresses)
if(finishAddresses ~= nil) then
print("Found finish region: "..finishAddresses.Count)
else
return "Cant find finish for "..text
end
if(startAddresses ~= nil) then
print("Found region: "..startAddresses.Count)
else
return "Cant find start for "..text
end

return extractText(startAddresses, finishAddresses, offset)

end

function extractText(start, finish, offset)
local start_with_offset = start[0+offset]
local dataSize = tonumber(finish[0],16) - tonumber(start_with_offset,16)
local lastItemSize = 1
local lastItem = readBytes(tonumber(finish[0],16), 300, true)
for i, v in ipairs(lastItem) do
  if v == 0x7d then break
  else
  lastItemSize = lastItemSize+1
  end
end
print(lastItemSize)
local data = readBytes(tonumber(start_with_offset,16),dataSize+lastItemSize, true)
local result = ""
for i, v in ipairs(data) do
if v == 0 then result=result.. '\n'
else
    result = result .. string.char(v)
    end
 end
return result
end

function textToAOB(text)
local bt = stringToByteTable(text)
local result = ""
 for i, v in ipairs(bt) do
   result = result .. string.format('%02X ', v)
 end
 print(text)
 return result
end

function UDF1_FormCreate(sender)
showResult("")
end

function UDF1_FormShow(sender)
highStartVehicle.Text = firstVehicleHighTear
highFinishVehicle.Text = lastVehicleHighTear
lowStartVehicle.Text = firstVehicleLowTear
lowFinishVehicle.Text = lastVehicleLowTear
addressToExtractStart.Text="1B097BBE0A0"
addressToExtractFinish.Text="1B097BC24AD"
end
function UDF1_FormActivate(sender)

end

function UDF1_CEButton2Click(sender)
local start = {}
start[0]=addressToExtractStart.Text
local finish = {}
finish[0]=addressToExtractFinish.Text
local result = extractText(start, finish, 0)
showResult(result)
end

</LuaScript>
</CheatTable>
